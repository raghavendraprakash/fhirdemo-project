Parameters:
  ahldatastore:
    Type: String
  secretname:
    Type: String
  regionname:
    Type: String
  vpccidr:
    Type: String
  subnetsize:
    Type: Number
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.200.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Resource
  VpcPublicSubnetSubnet1Subnet2D545245:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 172.31.200.0/26
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public-Subnet-
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/Subnet
  VpcPublicSubnetSubnet1RouteTable952F5ACB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/RouteTable
  VpcPublicSubnetSubnet1RouteTableAssociationD55768E6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnetSubnet1RouteTable952F5ACB
      SubnetId:
        Ref: VpcPublicSubnetSubnet1Subnet2D545245
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/RouteTableAssociation
  VpcPublicSubnetSubnet1DefaultRouteEE1A0B68:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnetSubnet1RouteTable952F5ACB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/DefaultRoute
  VpcPublicSubnetSubnet1EIPFA5F11A4:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/EIP
  VpcPublicSubnetSubnet1NATGateway7CC579B4:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnetSubnet1Subnet2D545245
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnetSubnet1EIPFA5F11A4
          - AllocationId
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1
    DependsOn:
      - VpcPublicSubnetSubnet1DefaultRouteEE1A0B68
      - VpcPublicSubnetSubnet1RouteTableAssociationD55768E6
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet1/NATGateway
  VpcPublicSubnetSubnet2Subnet2998188D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 172.31.200.64/26
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public-Subnet-
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2/Subnet
  VpcPublicSubnetSubnet2RouteTable6F81E274:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2/RouteTable
  VpcPublicSubnetSubnet2RouteTableAssociationC3B1A304:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnetSubnet2RouteTable6F81E274
      SubnetId:
        Ref: VpcPublicSubnetSubnet2Subnet2998188D
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2/RouteTableAssociation
  VpcPublicSubnetSubnet2DefaultRoute700EB667:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnetSubnet2RouteTable6F81E274
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Public-Subnet-Subnet2/DefaultRoute
  VpcPrivateSubnetSubnet1SubnetA98FAFEB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 172.31.200.128/26
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private-Subnet-
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1/Subnet
  VpcPrivateSubnetSubnet1RouteTable33D210E9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1/RouteTable
  VpcPrivateSubnetSubnet1RouteTableAssociation10EE673B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnetSubnet1RouteTable33D210E9
      SubnetId:
        Ref: VpcPrivateSubnetSubnet1SubnetA98FAFEB
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1/RouteTableAssociation
  VpcPrivateSubnetSubnet1DefaultRoute5D4DEB49:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnetSubnet1RouteTable33D210E9
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnetSubnet1NATGateway7CC579B4
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet1/DefaultRoute
  VpcPrivateSubnetSubnet2Subnet95A2D2EF:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 172.31.200.192/26
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private-Subnet-
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2/Subnet
  VpcPrivateSubnetSubnet2RouteTable8A37CC64:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2/RouteTable
  VpcPrivateSubnetSubnet2RouteTableAssociationCC8186B4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnetSubnet2RouteTable8A37CC64
      SubnetId:
        Ref: VpcPrivateSubnetSubnet2Subnet95A2D2EF
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2/RouteTableAssociation
  VpcPrivateSubnetSubnet2DefaultRouteD18C78C9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnetSubnet2RouteTable8A37CC64
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnetSubnet1NATGateway7CC579B4
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/Private-Subnet-Subnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: FhirdemoProjectStack/Vpc
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/VPCGW
  VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - Vpc8378EB38
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Vpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - Vpc8378EB38
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs16.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386
      aws:asset:property: Code
  TemplatedSecret3D98B577:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: /@}{][%#)(-+^*=_\&"
        GenerateStringKey: password
        SecretStringTemplate: '{"username": "postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/TemplatedSecret/Resource
  FHIRLambdaSecurityGroup3DAA9D19:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow outbound access ...
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/FHIRLambda-SecurityGroup/Resource
  FHIRLambdaSecurityGroupto00000ALLTRAFFIC34FC1798:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - FHIRLambdaSecurityGroup3DAA9D19
          - GroupId
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
      Description: Allow all outbound traffic by default
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/FHIRLambda-SecurityGroup/to 0.0.0.0_0:ALL TRAFFIC
  FHIRLambdaSecurityGroupfrom0000022C7D88A74:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
      Description: allow ssh traffic from the 0.0.0.0/0
      FromPort: 22
      GroupId:
        Fn::GetAtt:
          - FHIRLambdaSecurityGroup3DAA9D19
          - GroupId
      ToPort: 22
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/FHIRLambda-SecurityGroup/from 0.0.0.0_0:22
  FHIRLambdaSecurityGroupfromFhirdemoProjectStackFHIRLambdaSecurityGroupF502B074ALLTRAFFIC3E174F56:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "-1"
      Description: allow traffic from the same security group
      GroupId:
        Fn::GetAtt:
          - FHIRLambdaSecurityGroup3DAA9D19
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FHIRLambdaSecurityGroup3DAA9D19
          - GroupId
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/FHIRLambda-SecurityGroup/from FhirdemoProjectStackFHIRLambdaSecurityGroupF502B074:ALL TRAFFIC
  RDSSecurityGroup95109D60:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh access to ec2 instances
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/RDS-SecurityGroup/Resource
  RDSSecurityGroupto00000ALLTRAFFIC2E29BB93:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - RDSSecurityGroup95109D60
          - GroupId
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
      Description: Allow all outbound traffic by default
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/RDS-SecurityGroup/to 0.0.0.0_0:ALL TRAFFIC
  RDSSecurityGroupfromFhirdemoProjectStackFHIRLambdaSecurityGroupF502B074ALLTRAFFIC5CD2F0E5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "-1"
      Description: allow traffic from the same FHIR Lambda security group
      GroupId:
        Fn::GetAtt:
          - RDSSecurityGroup95109D60
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FHIRLambdaSecurityGroup3DAA9D19
          - GroupId
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/RDS-SecurityGroup/from FhirdemoProjectStackFHIRLambdaSecurityGroupF502B074:ALL TRAFFIC
  RDSSecurityGroupfromFhirdemoProjectStackRDSSecurityGroup11378044ALLTRAFFICD0034E71:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "-1"
      Description: allow traffic from the same security group
      GroupId:
        Fn::GetAtt:
          - RDSSecurityGroup95109D60
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RDSSecurityGroup95109D60
          - GroupId
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/RDS-SecurityGroup/from FhirdemoProjectStackRDSSecurityGroup11378044:ALL TRAFFIC
  fhirdemodbSubnetGroup0CC0D4F8:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for fhirdemodb database
      SubnetIds:
        - Ref: VpcPrivateSubnetSubnet1SubnetA98FAFEB
        - Ref: VpcPrivateSubnetSubnet2Subnet95A2D2EF
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/fhirdemodb/SubnetGroup/Default
  fhirdemodb088BA5B4:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "100"
      CopyTagsToSnapshot: true
      DBInstanceClass: db.m5.large
      DBSubnetGroupName:
        Ref: fhirdemodbSubnetGroup0CC0D4F8
      Engine: postgres
      MasterUsername: postgres
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: TemplatedSecret3D98B577
            - :SecretString:password::}}
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - RDSSecurityGroup95109D60
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/fhirdemodb/Resource
  Role1ABCC5F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: Lambda Execution role
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Role/Resource
  FHIRWorkshopAccessPolicy460FFCCA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - healthlake:CreateResource
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: FHIRWorkshopAccessPolicy460FFCCA
      Roles:
        - Ref: Role1ABCC5F0
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/FHIR-Workshop-Access-Policy/Resource
  awspsycopglayerCFA85100:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4753089a056916d3cd0094ff4d05cab57f2429b3f9d62d7f607410f75f374e0e.zip
      CompatibleRuntimes:
        - python3.8
      Description: Common helper utility to connect to postgres db
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/aws_psycopg_layer/Resource
      aws:asset:path: asset.4753089a056916d3cd0094ff4d05cab57f2429b3f9d62d7f607410f75f374e0e
      aws:asset:is-bundled: false
      aws:asset:property: Content
  awssigv4layerF19449E4:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 337b563873d56fbad2d6aa7659f277c26fc82e4bcdf934f5132b11c487df96da.zip
      CompatibleRuntimes:
        - python3.8
      Description: Common helper utility for signing requests
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/aws_sigv4_layer/Resource
      aws:asset:path: asset.337b563873d56fbad2d6aa7659f277c26fc82e4bcdf934f5132b11c487df96da
      aws:asset:is-bundled: false
      aws:asset:property: Content
  awsfhirliblayerC775CB98:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: fda99845e6adbb2b538e9cb18fe10b5ab0c7363cb6499f1698556f3c8ac81dc0.zip
      CompatibleRuntimes:
        - python3.8
      Description: Common helper utility for creating fhir resources
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/aws_fhirlib_layer/Resource
      aws:asset:path: asset.fda99845e6adbb2b538e9cb18fe10b5ab0c7363cb6499f1698556f3c8ac81dc0
      aws:asset:is-bundled: false
      aws:asset:property: Content
  lambdafunction45C982D3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f9390e99d514a9fe9fb99cb7551df34864943fe196457bc59734300afcc278e0.zip
      Role:
        Fn::GetAtt:
          - Role1ABCC5F0
          - Arn
      Environment:
        Variables:
          SECRET_NAME:
            Ref: secretname
          REGION_NAME:
            Ref: regionname
      Handler: lambda_function.lambda_handler
      Layers:
        - Ref: awsfhirliblayerC775CB98
        - Ref: awspsycopglayerCFA85100
        - Ref: awssigv4layerF19449E4
      Runtime: python3.8
      Timeout: 180
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - FHIRLambdaSecurityGroup3DAA9D19
              - GroupId
        SubnetIds:
          - Ref: VpcPrivateSubnetSubnet1SubnetA98FAFEB
          - Ref: VpcPrivateSubnetSubnet2Subnet95A2D2EF
    DependsOn:
      - Role1ABCC5F0
      - VpcPrivateSubnetSubnet1DefaultRoute5D4DEB49
      - VpcPrivateSubnetSubnet1RouteTableAssociation10EE673B
      - VpcPrivateSubnetSubnet2DefaultRouteD18C78C9
      - VpcPrivateSubnetSubnet2RouteTableAssociationCC8186B4
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/lambda_function/Resource
      aws:asset:path: asset.f9390e99d514a9fe9fb99cb7551df34864943fe196457bc59734300afcc278e0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SecretA720EF05:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        Ref: secretname
      SecretString:
        Fn::Join:
          - ""
          - - '{"ahl_datastore":"'
            - Ref: ahldatastore
            - '","user_name":"postgres","db_name":"postgres","password":"{{resolve:secretsmanager:'
            - Ref: TemplatedSecret3D98B577
            - :SecretString:password::}}","rds_host":"
            - Fn::GetAtt:
                - fhirdemodb088BA5B4
                - Endpoint.Address
            - '"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/Secret/Resource
  fhirdbClientInstanceInstanceRole7903077C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: FHIRDBClientInstance
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/fhirdbClientInstance/InstanceRole/Resource
  fhirdbClientInstanceInstanceProfile230E7C0C:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: fhirdbClientInstanceInstanceRole7903077C
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/fhirdbClientInstance/InstanceProfile
  fhirdbClientInstance478E78E0:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: fhirdbClientInstanceInstanceProfile230E7C0C
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - Fn::GetAtt:
                - FHIRLambdaSecurityGroup3DAA9D19
                - GroupId
          SubnetId:
            Ref: VpcPublicSubnetSubnet1Subnet2D545245
      Tags:
        - Key: Name
          Value: FHIRDBClientInstance
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          sudo yum update;sudo amazon-linux-extras enable postgresql14;sudo yum install postgresql -y;sudo amazon-linux-extras enable corretto8;sudo yum install java-1.8.0-amazon-corretto-devel -y;
    DependsOn:
      - fhirdbClientInstanceInstanceRole7903077C
      - VpcPublicSubnetSubnet1DefaultRouteEE1A0B68
      - VpcPublicSubnetSubnet1RouteTableAssociationD55768E6
      - VpcPublicSubnetSubnet2DefaultRoute700EB667
      - VpcPublicSubnetSubnet2RouteTableAssociationC3B1A304
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/fhirdbClientInstance/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LdxDtoE0duVrqNK0VTBxndzUlIw2QYkDqir++9yWUk1MO/n52XGeXzKSLxP5OICzH6r0MMx1IqsNgTqI+c7E4KBAQie4/lWhGslqe1R1aRvPRRySXKtNSAxSzfVobQPhJyQ59nzPTb23SgNpa27NNVhGcR3egVZAeIZSxE6fGPaDI8NqGHcNrZJrNiUWvi/QkNigCk5TuXI2HBsN/xLLzKH3d3RkWj4ynsAobBW0+CI8KofkCzCQoWPbmvw6hNFFuNTLagEECXi8DWm3uQlZzO6I/g4NhazWtvWxibFlz5vFe9T1x87udM7HciiSFGT1BiW6LTp/tfpX/hqM6t6gw7zV+Au8573ktA6cy1lQB6QZ73ARa/Q2uNqK4MkWfcry/i6xqJNO+Q818/hvZdpkdf9HoGNo/Jpbk+r2+rikvTUPYzmRT8+Db6/10AVDukC5buMP5ADWeLICAAA=
    Metadata:
      aws:cdk:path: FhirdemoProjectStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  AHLDatastoreURL:
    Value:
      Ref: ahldatastore
  EHRDBHostEndpoint:
    Value:
      Fn::GetAtt:
        - fhirdemodb088BA5B4
        - Endpoint.Address
  ConnectthroughconsoletooperateonDB:
    Value:
      Ref: fhirdbClientInstance478E78E0
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

